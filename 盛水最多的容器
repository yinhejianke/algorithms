思路：使用双指针；
使用第一列和最后一列, 可以构建宽度最宽的容器, 它的水位是第一根和最后一根中较小的一个的高度。
所有其他容器的宽度会更小, 又因为需要较高的水位才能容纳更多的水, 只能通过提高水位线来获得, 即移动较矮的指针;
实现逻辑：
1.左右指针初始化为数组的左右边界；
2.计算左右指针对应的面积：最小高度*两指针距离，并更新最大面积；
3.移动较小的指针；
4.重复2，3；
即
while(数组未遍历完成){
     1. 计算左右指针对应的面积：最小高度 * 两指针距离, 并更新最大面积
     2. 移动较小指针
}
实现代码：
    function maxArea($height) {
        $maxArea = 0;
        $left = 0;
        $right  = count($height)-1;
        while($left<$right){
            $b = $right - $left;
            if($height[$left]<$height[$right]){
                $min = $height[$left];
                $left++;
            }else{
                $min = $height[$right];
                $right--;
            }
            $area = $b*$min;
            if($maxArea <  $area) $maxArea =  $area;

        }

        return $maxArea;
    }
